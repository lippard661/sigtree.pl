# Default sigtree.config file.
# Written 18 January 2000 by Jim Lippard, from my original
#    1 January 1999 mtree.pl config file.
# Current version: sigtree-1.16
#
# By default, the config file goes in /etc/<hostname>.sigtree.conf.
#    The -c option allows selection of an alternative config file.
# By default, the root directory is /var/db/sigtree, which can be
#    changed with the -r option.
#    This is the location for the host-level spec file (and its
#    signature file) and the changed file.
# By default, the per-tree specs go in /var/db/sigtree/specs/<hostname>
#    The -d option chooses a different subdirectory in the root directory
#    (e.g., -d secondary). The secondary spec file (and its signature
#    file) also go into the root directory, like the primary ones.
#
# Optional crypto signing/verification for specs. Default is "none"
# (commented out), other options are "GPG" for GPG2, "GPG1" for GPG1,
# and "signify" to use signify.
#crypto_sigs: GPG
# PGP/GPG keys are in /root/.pgp by default for PGP or
#    /root/.gnupg for GPG, or may be set below.
#pgpkeyring: /root/.gnupg
# Default locations of signify public and secret keys.
#signify_pubkey: /etc/signify/sigtree.pub
#signify_seckey: /etc/signify/sigtree.sec
# Optional PGP key ID, for signing all specs.  Default is commented out.
#   Must be set to "signify" for signify.
# This option is disregarded for secondary specs (-d secondary).
#pgpkeyid: keyid

# Optional use of system immutability flags to protect specs
# (requires going to single user mode to make changes).
# Default is no.  To use, set to yes, or, on BSD, to schg (same as
# "yes") for system immutability flags that can only be changed when
# securelevel=0, or to uchg, which has no securelevel restrictions.
# This option is disregarded for secondary specs (-d secondary).
immutable-specs: no

# Select Secure Hash Algorithm, SHA-2 and SHA-3 are supported.
# Default is SHA-3, 256 bits.
# SHA-2 supports 256, 384, or 512.
# SHA-3 supports 224, 256, 384, or 512.
# Options are:
# sha2_digest: N
# where N is 256, 384, or 512, or:
# sha3_digest: N
# where N is 224, 256, 384, or 512.
# Default changed from 256-bit SHA-2 to 256-bit SHA-3 on 10 October 2015.
# sha3_digest: 256
# Default previously switched from SHA-1 to SHA-2 (256-bit) as of
# 5 March 2005; recommendation was to switch to SHA-2 by 2010.
# Support for SHA-1 was removed at that time.

# Definitions of sets.
#
# Sets are used in several different ways.
#
# First, sets are used to group trees, so that different groups of
# trees may be initialized, checked, or updated by sigtree.  These
# operations are done on entire trees, so when used in this way,
# even exceptions are considered to be part of the same set as the
# tree they are part of.  Sets used only for this purpose do
# not have "keywords:" or "priority:" settings, and are known as
# secondary sets, but primary sets can also be used for this purpose.
#
# The -s argument to sigtree is used for specifying actions to
# be performed on a given set, using either a primary or secondary
# set, but it is important to note that it only matches *trees*
# that are members of the set, not exceptions within a tree.
# If you have an exception that belongs to a primary
# set that is not a set assigned to its tree, and try to check
# trees with -s <that-set>, that exception will not be checked because
# its tree will not be checked.  If, say, you want to be able to check
# all log files, you can only do that if every tree that contains log
# files has LOG as a set, which means you will have to check all of
# those trees (and not just the log files within them).  Sorry.
#
# Second, sets are used to determine which attributes of files are
# examined for changes.  There is no requirement that every part
# of a tree be the same in this respect.  The first set listed for
# a given tree or exceptional path of a tree is known as its
# primary set, and it is the set that determines what file attributes
# are checked (identified by the "keywords:" directive in a set
# definition) and what the priority level of the files is.
# Sets in this sense are known as primary sets.
#
# Syntax is:
# set: <longname>,<shortname> (Required.)
# description: <human-readable description of set> (Required.)
# keywords: <list of comma-separated mtree keywords to check> (Optional.)
# priority: <number indicating priority of reported discrepancies> (Optional.)
# Defaults:  keywords: all, priority: 0.
# Available keywords are gid,mode,nlink,shadigest,uid,size,link,mtime,ctime,type,linktarget_type,flags
# gid: group id of owner
# uid: user id of owner
# mode: access mode (permissions) flags
# nlink: number of hard links
# shadigest: the SHA-2 or SHA-3 digest, depending on which is selected
#   (former shadigest is still supported for backwards compatibility)
# size: size in bytes
# link: is this a link?
# mtime: modification time of file contents
# mtimestasis-NN[smhd]: modification time stasis--report if file hasn't
#        changed for more than NN seconds/minutes/hours/days.
# ctime: inode change time
# type: type of file (file, dir, link, device, etc.)
# linktarget_type: type of file that is target of a symbolic link
# flags: file system flags (arch, opaque, nodump, sappnd, schg, uappnd, uchg)
# (i.e., a subset of mtree keywords, with time split into mtime and ctime,
# and flags added).
# If you use immutable flags (schg) to protect system binaries, and regularly
# turn those on and off, you don't want your keywords to include ctime.

# Secondary sets.
set: daily,D
description: Files checked daily.

set: weekly,W
description: File checked weekly.

# You can change the attributes of this set, including its
# secondary name, but there must be a sigtree group defined
# in order for reports to be generated about various notices
# failures with regard to sigtree as a whole (that aren't
# tied to any particular trees).
set: sigtree,SIG
description: Sigtree files.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,ctime,type,linktarget_type
priority: 500

# Primary sets.
# This set is used for exceptions that aren't to be checked for
# changes.
set: ignored,IGN
description: Ignored files.
keywords: ignore
priority: 0

set: kernel,KERN
description: System kernel.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,ctime,type,linktarget_type,flags
priority: 100

set: bin,BIN
description: System binaries.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,type,linktarget_type,flags
priority: 100

set: root,ROOT
description: Root's files.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,type,linktarget_type,flags
priority: 100

set: config,CONF
description: System configuration files.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,type,linktarget_type,flags
priority: 100

set: lib,LIB
description: System libraries.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,type,linktarget_type,flags
priority: 100

set: log,LOG
description: System log files.
keywords: gid,mode,nlink,uid,link,type,linktarget_type,flags
priority: 100

set: critical-log,CRIT-LOG
description: Critical log files that must change at least once in 24 hours.
keywords: gid,mode,nlink,uid,link,type,linktarget_type,flags,mtimestasis-24h
priority: 500

set: doc,DOC
description: Documentation files.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,type,linktarget_type,flags
priority: 10

set: web,WEB
description: Web files--HTML and CGI.
keywords: gid,mode,nlink,shadigest,uid,size,link,mtime,type,linktarget_type,flags
priority: 100

# mtime and ctime typically change very frequently for devices,
# and so aren't included by default.
set: device,DEV
description: Devices.
keywords: gid,mode,nlink,shadigest,uid,size,link,type,linktarget_type,flags
priority: 100

# List of pathnames identifying trees to produce specs for and a list
# of the sets they belong to.  The first set in a set list determines
# which keywords are set and report settings for the files in the tree.
# The exception directive is used to override the keyword and report
# settings for a particular file (it can be a directory) within the
# tree by making another set the primary set for the exception file
# (and its subtree, if it's a directory).  The exceptional file can
# still be a member of the parent set (and thus still be checked
# when that set is checked), but it need not be.  Exception path
# names must be relative to the tree root.
#    If an exception path is a directory, the primary set for that
# exception applies only to that directory, not to any other files
# under that directory.  If you want to make an exception for an entire
# subtree, you must use exception-tree instead of exception.  (This
# behavior changed between 1.05 and 1.1.)
# Syntax:
# tree: <path>:<setlist>
# exception: <path>:<primary set>
# exception-tree: <dirpath>:<primary set>

# Trees.

# Files under /.
tree: /bsd:KERN,D

tree: /bin:BIN,D

tree: /dev:DEV,D

tree: /etc:CONF,D
exception: .:LOG

tree: /root:ROOT,D

tree: /sbin:BIN,D

# Files under /usr.
tree: /usr/bin:BIN,D

tree: /usr/include:BIN,W

tree: /usr/lib:LIB,D

tree: /usr/libdata:LIB,W

tree: /usr/libexec:BIN,D

tree: /usr/sbin:BIN,D

tree: /usr/share:DOC,W

tree: /usr/X11R6/bin:BIN,D

tree: /usr/X11R6/lib:LIB,D

# Files under /usr/local.
tree: /usr/local/bin:BIN,D

tree: /usr/local/include:BIN,W

tree: /usr/local/info:BIN,W

tree: /usr/local/lib:LIB,D

tree: /usr/local/libdata:LIB,W

tree: /usr/local/libexec:BIN,D

tree: /usr/local/sbin:BIN,D

tree: /usr/local/share:DOC,W

# Files under /var/log.
tree: /var/log/adduser:LOG,D

tree: /var/log/authlog:CRIT-LOG,D

tree: /var/log/daemon:CRIT-LOG,D

tree: /var/log/ftpd:LOG,D

tree: /var/log/lastlog:CRIT-LOG,D

tree: /var/log/maillog:CRIT-LOG,D

tree: /var/log/messages:CRIT-LOG,D

tree: /var/log/pflog:CRIT-LOG,D

tree: /var/log/pflog.txt:CRIT-LOG,D

tree: /var/log/secure:CRIT-LOG,D

tree: /var/log/xferlog:LOG,D
